package kusitms.jangkku.domain.persona.constant;

import java.util.Arrays;
import java.util.List;

public enum Content {
    CREATOR("RIA",
            "예술을 찾아 탐험하는 당신은, 크리에이터(Creator)",
            "현실은 나의 캔버스, 상상력은 나의 브러시! 현실과 예술을 자유롭게 탐험하며 세상을 아름답게 채워나가는 창조적인 영혼인 당신은 크리에이터 조각이 어울려요!",
            "새로운 아이디어를 탐색하고 창의적인 표현을 통해 세상을 이해하는 능력",
            Arrays.asList("생산성", "지혜", "창의성"),
            "기계적 운동적인 능력은 있으나 대인관계능력은 조금 부족해요.\n 연구 능력과 수학적, 과학적인 능력은 높지만 지도력이나 설득력이 부족할 때도 있어요.\n 상징적 자유적 비체계적 능력은 있으나 체계적 순서적인 능력은 부족해요.",
            "예술적 창조와 표현, 변화와 다양성을 좋아하고, 틀에 박힌것을 싫어해요. 모호하고 자유로운 활동들을 좋아하고 관찰적, 상징적 현상의 창조적인 탐구를 수반하는 활동들에 흥미를 보여요. 그러나 사회적이고 반복적인 활동들에서는 관심이 부족한 경향이 있어요.",
            Arrays.asList("현실형", "탐구형", "예술형")),
    INSIGHTER("RIC",
            "날카로운 현실을 바라보는 당신은, 인사이터(Insighter)",
            "세상을 꿰뚫어 보는 날카로운 눈! 현실을 객관적으로 파악하고 분석하는 능력으로 세상의 진실을 밝혀내는 탐정과 같은 당신은 인사이터 조각이 잘 어울려요!",
            "논리적 사고와 분석 능력을 통해 문제를 해결하고 개선하는 능력",
            Arrays.asList("생산성", "지혜", "안정"),
            "기계적 운동적인 능력은 있으나 대인관계능력은 조금 부족해요.\n 연구 능력과 수학적, 과학적인 능력은 높지만 지도력이나 설득력이 부족할 때도 있어요.\n 예술적, 독창적인 상상력보다는 사무적이고, 체계적이에요.",
            "관찰적, 체계적이며, 물리적, 문화적 현상의 탐구를 수반하는 활동들에 흥미를 보이고, 정해진 원칙과 계획에 따라 자료들을 기록, 적리, 조직하는 일을 좋아해요. 동시에 창의적, 자율적이며 모험적, 비체계적인 활동에는 혼란을 느끼는 경향이 있어요.",
            Arrays.asList("현실형", "탐구형", "관습형")),
    INNOVATOR("REA",
            "현실을 예술적인 눈으로 보는 당신은, 이노베이터(Innovator)",
            "현실적인 목표를 향해 예술적 감각으로 혁신을 이끄는 리더! 세상을 변화시키는 새로운 아이디어로 가득 찬 상상력의 소유자와 같은 당신은 이노베이터 조각이 어울려요!",
            "기존의 틀을 깨고 새로운 가치를 창출하는 능력",
            Arrays.asList("전문성", "모험", "개성"),
            "외부에 흔들리지 않고, 자기만의 기준을 유지하며 운동적인 능력이 있어요.\n 과학적인 능력은 다소 부족하지만, 적극적이고 사회적이에요.\n 상징적, 자유로운 상상력이 강점이지만 체계적이거나 순서적이지는 않아요.",
            "신체적 기술들을 좋아하고, 조직의 목적을 위해 타인을 선도, 계획, 통제, 관리하는 일을 좋아하지만 체계적 활동에는 흥미가 없는 편이에요. 예술적 창조와 표현, 변화와 다양성을 좋아하고, 틀에 박힌것을 싫어하며, 자유롭고, 상징적인 활동들을 좋아해요.",
            Arrays.asList("현실형", "기업형", "예술형")),
    INVENTOR("REC",
            "현실적이면서도 창의적인 당신은, 인벤터(Inventor)",
            "현실적인 문제 해결 능력과 창의적인 사고로 실용적인 작품을 만들어내는 천재 발명가! 세상을 더 나은 곳으로 만드는 혁신적인 아이템을 만들어낼 수 있어요. 이런 당신은 인벤터의 조각이 어울리는군요!",
            "특정 분야에 대한 깊은 지식과 전문성을 갖춘 능력",
            Arrays.asList("생산성", "모험", "능률"),
            "외부에 흔들리지 않고, 자기만의 기준을 유지하며 운동적인 능력이 있어요.\n 적극적이고 사회적이고, 지도력과 언어구사능력이 뛰어나요.\n 때론 사무적이며, 계산적이고 회계 정리를 잘해요.",
            "분명하고 체계적인 대상을 다루는 활동 내지는 신체적 기술들을 좋아하고, 조직의 목적과 경제적 이익을 얻기 위해 타인을 선도, 계획, 통제, 관리하는 일을 좋아해요. 현실적인 직업환경에서 창의적, 모험적 능력을 발휘하여 문제를 해결하는 활동을 선호해요.",
            Arrays.asList("현실형", "기업형", "관습형")),
    PROJECTOR("SIA",
            "치열한 탐구정신으로 사회를 보는 당신은, 프로젝터(Projector)",
            "사회 문제에 대한 깊은 이해와 탐구 정신으로 사회 변화를 이끄는 정의의 투사자! 세상을 더 나은 곳으로 만들기 위해 끊임없이 노력하는 열정적인 영혼이군요. 열정적인 당신은 프로젝터 조각이 딱이에요!",
            "탐구심과 끈기로 새로운 지식을 발견하고 이해하는 능력",
            Arrays.asList("사랑", "지혜", "창의성"),
            "사회적 교육적 지도력과 대인관계 능력이 있어요.\n 상징적이고 자유롭지만, 숫자나 체계에는 다소 약해요.\n 은근히 학구적,지적인 자부심을 가지고 있으며 높은 연구 능력을 발휘할 때도 있어요.",
            "타인의 문제를 듣고 이해하고 도와주고 치료해주고, 봉사하는 활동들에 관심이 많으며, 문화적 현상의 창조적인 탐구를 수반하는 활동들에 흥미를 보이지만, 기계적이고 체계적인 활동에는 흥미가 없는 편이에요.",
            Arrays.asList("사회형", "탐구형", "예술형")),
    CONNECTOR("SIC",
            "사람들과의 연결, 소통을 좋아하는 당신은, 커넥터(Connector)",
            "뛰어난 소통 능력과 조율력으로 사람들을 연결하고 협력을 이끄는 조화로운 조직가! 사람들을 하나로 모아 더 큰 힘을 만들어내는 마법사같군요. 사람과 사람을 연결하는 능력을 가진 당신은 커넥터 조각이 딱이에요!",
            "체계적인 사고와 계획력을 통해 효율적으로 일을 처리하는 능력",
            Arrays.asList("평등", "지혜", "체계"),
            "사회적 교육적 지도력과 대인관계 능력이 뛰어나면서 학구적, 지적인 자부심도 겸비하고 있어요.\n 체계성, 정확성을 보유하고 있지만 때로는 예술적, 상상적인 능력이 부족할 때도 있어요.",
            "타인의 문제를 듣고 이해하고 도와주고 치료해주고, 봉사하는 활동들에 흥미를 보여요. 체계적인 직업환경에서 정해진 원칙과 계획에 따라 조직하는 일을 좋아하고 친화력을 발휘하여 사람들간 상호 성장을 도모하는 활동을 좋아해요.",
            Arrays.asList("사회형", "탐구형", "관습형")),
    ENCOURAGER("SEA",
            "팀을 이끌어 감동적인 변화를 만드는 당신은, 인커리져(Encourager)",
            "사회적 책임감과 리더십을 바탕으로 감동적인 변화를 이끄는 영감의 원천! 사람들에게 희망과 용기를 주는 따뜻한 마음의 리더군요. 따뜻한 당신은 누군가에게 새로운 변화를 주는 인커리져 조각이 잘 어울려요!",
            "다른 사람들과 협력하여 공동의 목표를 달성하는 능력",
            Arrays.asList("평등", "명예", "개성"),
            "사회적 교육적 지도력과 대인관계 능력이 뛰어나고, 설득력이 강해요.\n 때로는 과학적, 체계적인 능력은 다소 부족할 때도 있어요.\n 상징적이며 자유로우며, 비체계적인 능력에서 두각을 드러내고 있어요.",
            "타인의 문제를 듣고 이해하고 도와주고 치료해주고, 봉사하는 활동들에 흥미를 보여요. 조직의 목적을 위해 타인을 선도, 관리하는 일과 그 결과로 얻는 위신, 인정을 얻는 활동들을 좋아해요. 예술적 창조와 표현, 다양성을 좋아하지만, 체계적이고 구조화된 활동에는 대체적으로 흥미가 없는 편이에요.",
            Arrays.asList("사회형", "기업형", "예술형")),

    ORGANIZER("SEC",
            "꼼꼼히 실천하고 계획하는 당신은, 오거나이져(Organizer)",
            "현실적인 목표를 설정하고 체계적인 계획을 통해 목표를 달성하는 실용적인 리더! 꼼꼼한 계획과 실행력으로 꿈을 현실로 만드는 마법사군요. 실천하고 계획하는 당신은, 오거나이져 조각이 잘 어울려요!",
            "비전과 영감을 통해 사람들을 이끌고 목표를 달성하는 능력",
            Arrays.asList("평등", "모험", "체계"),
            "적극적이고 사회적이며, 지도력과 대인관계 능력이 뛰어나고, 설득력이 강한 편이에요.\n 사무적이며, 체계적인 편이며, 정확하게 내 의사를 전해요.\n 다만 현실적인 성향이라 예술적, 상상적인 능력은 부족한 편이에요.",
            "정해진 원칙과 계획에 따라 자료들을 기록, 적리, 조직하는 일을 좋아하고 체계적인 직업환경에서 사무적, 계산적 능력을 발휘하는 활동을 좋아해요. 조직의 목적과 경제적 이익을 위해 타인의 문제를 듣고 이해하고 도와주는 일에 흥미를 보이지만 창의적, 자율적이며 모험적인 활동에는 혼란을 느끼기도 해요.",
            Arrays.asList("사회형", "기업형", "관습형"));

    private final String code;
    private final String comment;
    private final String description;
    private final String ability;
    private final List<String> values;
    private final String strength;
    private final String preference;
    private final List<String> types;

    Content(String code, String comment, String description, String ability, List<String> values, String strength, String preference, List<String> types) {
        this.code = code;
        this.comment = comment;
        this.description = description;
        this.ability = ability;
        this.values = values;
        this.strength = strength;
        this.preference = preference;
        this.types = types;
    }

    public String getCode() {
        return code;
    }

    public String getComment() {
        return comment;
    }

    public String getDescription() {
        return description;
    }

    public String getAbility() {
        return ability;
    }

    public List<String> getValues() {
        return values;
    }

    public String getStrength() {
        return strength;
    }

    public String getPreference() {
        return preference;
    }

    public List<String> getTypes() {
        return types;
    }
}